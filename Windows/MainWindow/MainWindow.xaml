<Window
  x:Class="StarsectorTools.Windows.MainWindow.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:I18n="clr-namespace:StarsectorTools.Langs.Windows.MainWindow"
  xmlns:Utils="clr-namespace:StarsectorTools.Libs.Utils"
  xmlns:attack="clr-namespace:HKW.WPF.Attach"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:local="clr-namespace:StarsectorTools.Windows.MainWindow"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:pu="clr-namespace:Panuon.WPF.UI;assembly=Panuon.WPF.UI"
  xmlns:sys="clr-namespace:System.Windows;assembly=PresentationFramework"
  Width="1000"
  Height="500"
  MinWidth="800"
  MinHeight="400"
  MaxWidth="{x:Static sys:SystemParameters.MaximizedPrimaryScreenWidth}"
  MaxHeight="{x:Static sys:SystemParameters.MaximizedPrimaryScreenHeight}"
  Padding="5"
  FontFamily="Consolas"
  MouseLeftButtonDown="Window_MouseLeftButtonDown"
  Style="{StaticResource Window_Style}"
  WindowStartupLocation="CenterScreen"
  WindowStyle="None"
  mc:Ignorable="d">
  <!--  使用SystemParameters中的MaximizedPrimaryScreenWidth和MaximizedPrimaryScreenHeight来指定最大化范围,不然会覆盖任务栏  -->
  <Window.DataContext>
    <local:MainWindowViewModel />
  </Window.DataContext>
  <WindowChrome.WindowChrome>
    <WindowChrome
      CaptionHeight="0"
      GlassFrameThickness="0,0,0,1"
      ResizeBorderThickness="5" />
  </WindowChrome.WindowChrome>
  <Window.Resources>
    <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Panel}">
      <Setter Property="Margin" Value="0" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
          <Setter Property="Margin" Value="7" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style
      x:Key="ButtonPressed"
      BasedOn="{StaticResource Button_Style}"
      TargetType="Button">
      <Style.Triggers>
        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
          <Setter Property="Background" Value="{DynamicResource ColorAqua3}" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style
      x:Key="ListBoxItemMVVM"
      BasedOn="{StaticResource ListBoxItem_Style}"
      TargetType="ListBoxItem">
      <Setter Property="Content" Value="{Binding Content}" />
      <Setter Property="ToolTip" Value="{Binding ToolTip}" />
      <Setter Property="Tag" Value="{Binding Tag}" />
      <Setter Property="IsSelected" Value="{Binding IsSelected}" />
      <!--<Setter Property="pu:ListBoxItemHelper.Icon" Value="{Binding Icon}" />-->
      <!--  设置TextBlock出现问题,暂无解决方案  -->
      <Setter Property="pu:ListBoxItemHelper.Icon" Value="{DynamicResource EmojiTextBlock}" />
      <Setter Property="ContextMenu">
        <Setter.Value>
          <!--  绑定右键菜单  -->
          <ContextMenu ItemsSource="{Binding ContextMenu}" Style="{StaticResource ContextMenu_Style}">
            <ContextMenu.ItemContainerStyle>
              <Style BasedOn="{StaticResource MenuItem_Style}" TargetType="MenuItem">
                <Setter Property="Icon" Value="{Binding Icon}" />
                <Setter Property="Header" Value="{Binding Header}" />
                <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                <Setter Property="Command" Value="{Binding MenuItemCommand}" />
                <Setter Property="CommandParameter" Value="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}}" />
              </Style>
            </ContextMenu.ItemContainerStyle>
          </ContextMenu>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>
  <Grid Style="{StaticResource WindowMainPanelStyle}">
    <Grid
      x:Name="Grid_TitleBar"
      VerticalAlignment="Top"
      Background="{DynamicResource WindowGlassBrush}"
      MouseLeftButtonDown="Grid_TitleBar_MouseLeftButtonDown">
      <Grid HorizontalAlignment="Center">
        <Image
          x:Name="Image_Title"
          Width="20"
          Height="20"
          Margin="5,5,0,0"
          HorizontalAlignment="Left"
          VerticalAlignment="Top" />
        <Label
          x:Name="Label_Title"
          Margin="30,0,0,0"
          Padding="0"
          HorizontalAlignment="Center"
          Background="{x:Null}"
          Content="{Binding TitleI18n}"
          FontSize="20"
          FontWeight="Bold"
          Style="{StaticResource Label_Style}" />
      </Grid>
      <Button
        x:Name="Button_TitleMin"
        Width="40"
        Height="30"
        Margin="0,0,80,0"
        HorizontalAlignment="Right"
        pu:ButtonHelper.ClickBackground="LightBlue"
        pu:ButtonHelper.HoverBackground="Aqua"
        Click="Button_TitleMin_Click"
        Content="➖"
        FontSize="16"
        Style="{StaticResource Button_Style}" />
      <Button
        x:Name="Button_TitleMax"
        Width="40"
        Height="30"
        Margin="0,0,40,0"
        HorizontalAlignment="Right"
        pu:ButtonHelper.ClickBackground="LightBlue"
        pu:ButtonHelper.HoverBackground="Aqua"
        Click="Button_TitleMax_Click"
        Content="🔲"
        FontSize="16"
        Style="{StaticResource Button_Style}" />
      <Button
        x:Name="Button_TitleClose"
        Width="40"
        Height="30"
        HorizontalAlignment="Right"
        pu:ButtonHelper.ClickBackground="IndianRed"
        pu:ButtonHelper.HoverBackground="Red"
        Click="Button_TitleClose_Click"
        Content="❌"
        FontSize="16"
        Style="{StaticResource Button_Style}" />
      <Button
        x:Name="Button_MainMenu"
        Width="30"
        Height="30"
        Padding="0"
        HorizontalAlignment="Left"
        VerticalAlignment="Center"
        d:Tag="True"
        Command="{Binding ChangeMenuExpansionCommand}"
        Style="{StaticResource Button_Style}"
        Tag="{Binding MenuIsExpand}">
        <pu:ButtonHelper.Icon>
          <emoji:TextBlock
            x:Name="Button_MainMenuIcon"
            FontSize="16"
            Tag="{Binding Tag, ElementName=Button_MainMenu}">
            <TextBlock.Style>
              <Style TargetType="emoji:TextBlock">
                <Setter Property="Text" Value="{x:Static Utils:STIcon.MenuCloseIcon}" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=PreviousData}}" Value="True">
                    <Setter Property="Text" Value="{x:Static Utils:STIcon.MenuOpenIcon}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </emoji:TextBlock>
        </pu:ButtonHelper.Icon>
      </Button>
    </Grid>
    <Grid Margin="0,30,0,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid x:Name="Grid_MainMenu" Tag="{Binding Tag, ElementName=Button_MainMenu}">
        <Grid.Style>
          <Style TargetType="Grid">
            <Setter Property="Width" Value="30" />
            <Style.Triggers>
              <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter Property="Width" Value="NaN" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Grid.Style>
        <ScrollViewer Margin="0,0,0,90" Tag="{Binding Tag, ElementName=Button_MainMenu}">
          <ScrollViewer.Style>
            <Style BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="ScrollViewer">
              <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                  <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </ScrollViewer.Style>
          <StackPanel>
            <ListBox
              x:Name="ListBox_MainMenu"
              FontSize="16"
              ItemContainerStyle="{StaticResource ListBoxItemMVVM}"
              ItemsSource="{Binding MainListBox}"
              SelectedItem="{Binding SelectedPageItem}"
              Style="{StaticResource ListBox_Style}">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                  <i:InvokeCommandAction Command="{Binding MenuSelectionChangedCommand}" CommandParameter="{Binding SelectedPageItem}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </ListBox>
            <Expander
              Padding="0"
              FontSize="16"
              Header="{x:Static I18n:MainWindow_I18n.Expansion}"
              IsExpanded="True"
              Style="{StaticResource Expander_Style}">
              <Expander.ContextMenu>
                <ContextMenu Style="{StaticResource ContextMenu_Style}">
                  <MenuItem Click="RefreshExpansionMenu_Click" Header="{x:Static I18n:MainWindow_I18n.RefreshExpansionList}">
                    <MenuItem.Icon>
                      <emoji:TextBlock FontSize="16" Text="🔄" />
                    </MenuItem.Icon>
                  </MenuItem>
                </ContextMenu>
              </Expander.ContextMenu>
              <ListBox
                x:Name="ListBox_ExpansionMenu"
                ItemContainerStyle="{StaticResource ListBoxItemMVVM}"
                ItemsSource="{Binding ExpansionPageItems}"
                PreviewMouseWheel="ListBox_PreviewMouseWheel"
                SelectedItem="{Binding SelectedPageItem}"
                Style="{StaticResource ListBox_Style}" />
            </Expander>
          </StackPanel>
        </ScrollViewer>
        <Button
          Height="30"
          Margin="0,0,0,60"
          Padding="0,0,5,0"
          VerticalAlignment="Bottom"
          HorizontalContentAlignment="Left"
          Command="{Binding StartGameCommand}"
          Content="{Binding StartGameI18n}"
          FontSize="16"
          Style="{StaticResource Button_Style}">
          <pu:ButtonHelper.Icon>
            <emoji:TextBlock FontSize="16" Text="▶" />
          </pu:ButtonHelper.Icon>
          <Button.ContextMenu>
            <ContextMenu Style="{StaticResource ContextMenu_Style}">
              <CheckBox
                Content="{Binding ClearGameLogOnStartI18n}"
                IsChecked="{Binding ClearGameLogOnStart}"
                Style="{StaticResource CheckBox_Style}" />
            </ContextMenu>
          </Button.ContextMenu>
        </Button>
        <Button
          x:Name="Button_InfoPage"
          Height="30"
          Margin="0,0,0,30"
          Padding="0,0,5,0"
          VerticalAlignment="Bottom"
          HorizontalContentAlignment="Left"
          Command="{Binding ShowPageCommand}"
          CommandParameter="{Binding InfoPage}"
          Content="{Binding InfoI18n}"
          FontSize="16"
          Style="{StaticResource ButtonPressed}"
          Tag="{Binding InfoButtonIsChecked}">
          <pu:ButtonHelper.Icon>
            <emoji:TextBlock FontSize="16" Text="ℹ" />
          </pu:ButtonHelper.Icon>
        </Button>
        <Button
          x:Name="Button_SettingsPage"
          Height="30"
          Margin="0,0,0,0"
          Padding="0,0,5,0"
          VerticalAlignment="Bottom"
          HorizontalContentAlignment="Left"
          Command="{Binding ShowPageCommand}"
          CommandParameter="{Binding SettingsPage}"
          Content="{Binding SettingsI18n}"
          FontSize="16"
          Style="{StaticResource ButtonPressed}"
          Tag="{Binding SettingsButtonIsChecked}">
          <pu:ButtonHelper.Icon>
            <emoji:TextBlock FontSize="16" Text="⚙" />
          </pu:ButtonHelper.Icon>
        </Button>
      </Grid>
      <Frame
        x:Name="Frame_MainFrame"
        Grid.Column="1"
        Content="{Binding NowPage}"
        NavigationUIVisibility="Hidden" />
    </Grid>
  </Grid>
</Window>