<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GameNotFound_SelectAgain" xml:space="preserve">
    <value>未确认游戏启动程序, 请重新选择</value>
  </data>
  <data name="ReplicationSuccess" xml:space="preserve">
    <value>复制成功</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>位置</value>
  </data>
  <data name="LogFilesNotExist" xml:space="preserve">
    <value>Log文件不存在</value>
  </data>
  <data name="LogFileCleanCompleted" xml:space="preserve">
    <value>Log文件清理完成</value>
  </data>
  <data name="FolderNotExist" xml:space="preserve">
    <value>文件夹不存在</value>
  </data>
  <data name="MissionsLoadoutsNotExist" xml:space="preserve">
    <value>战役配装文件不存在</value>
  </data>
  <data name="MissionsLoadoutsClearCompleted" xml:space="preserve">
    <value>战役配装文件清理完成</value>
  </data>
  <data name="SaveCleanCompleted" xml:space="preserve">
    <value>存档清理完成</value>
  </data>
  <data name="SaveNotExist" xml:space="preserve">
    <value>存档不存在</value>
  </data>
  <data name="GameSettings" xml:space="preserve">
    <value>游戏设置</value>
  </data>
  <data name="GameDirectory" xml:space="preserve">
    <value>游戏目录</value>
  </data>
  <data name="SetGameDirectory" xml:space="preserve">
    <value>设置目录</value>
  </data>
  <data name="SetMemory" xml:space="preserve">
    <value>设置内存</value>
  </data>
  <data name="Used" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="GameKey" xml:space="preserve">
    <value>游戏序列码</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>显示</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="GameVersion" xml:space="preserve">
    <value>游戏版本</value>
  </data>
  <data name="LogClear" xml:space="preserve">
    <value>Log清理</value>
  </data>
  <data name="OpenLogFile" xml:space="preserve">
    <value>打开Log文件</value>
  </data>
  <data name="ClearLogFiles" xml:space="preserve">
    <value>清理Log文件</value>
  </data>
  <data name="MissionsLoadoutsClean" xml:space="preserve">
    <value>战役装配清理</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="ClearMissionsLoadouts" xml:space="preserve">
    <value>清理战役装配</value>
  </data>
  <data name="OpenMissionsLoadoutsFolder" xml:space="preserve">
    <value>打开战役配装文件夹</value>
  </data>
  <data name="SaveClean" xml:space="preserve">
    <value>存档清理</value>
  </data>
  <data name="RetainRecentSaveCount" xml:space="preserve">
    <value>保留最近存档数</value>
  </data>
  <data name="ClearSave" xml:space="preserve">
    <value>清理存档</value>
  </data>
  <data name="OpenSaveFolder" xml:space="preserve">
    <value>打开存档文件夹</value>
  </data>
  <data name="OpenGameDirectory" xml:space="preserve">
    <value>打开目录</value>
  </data>
  <data name="VmparamsMemorySet" xml:space="preserve">
    <value>vmparams 内存设置为</value>
  </data>
  <data name="VmparamsMemorySetSuccess" xml:space="preserve">
    <value>vmparams 内存设置设置成功</value>
  </data>
  <data name="CustomResolution" xml:space="preserve">
    <value>自定义分辨率</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>清除所有</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>宽</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>高</value>
  </data>
  <data name="BorderlessWindow" xml:space="preserve">
    <value>无边框窗口</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>重置</value>
  </data>
  <data name="SetupSuccessful" xml:space="preserve">
    <value>设置成功</value>
  </data>
  <data name="ResetSuccessful" xml:space="preserve">
    <value>重置成功</value>
  </data>
</root>