<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GameNotFound_SelectAgain" xml:space="preserve">
    <value>Game launcher not found, please select again</value>
  </data>
  <data name="ReplicationSuccess" xml:space="preserve">
    <value>Replication success</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="LogFilesNotExist" xml:space="preserve">
    <value>Log files do not exist</value>
  </data>
  <data name="LogFileCleanCompleted" xml:space="preserve">
    <value>Log file cleanup completed</value>
  </data>
  <data name="FolderNotExist" xml:space="preserve">
    <value>Folder does not exist</value>
  </data>
  <data name="MissionsLoadoutsNotExist" xml:space="preserve">
    <value>Missions loadouts not exist</value>
  </data>
  <data name="MissionsLoadoutsClearCompleted" xml:space="preserve">
    <value>Missions loadouts cleanup completed</value>
  </data>
  <data name="SaveCleanCompleted" xml:space="preserve">
    <value>Save cleanup completed</value>
  </data>
  <data name="SaveNotExist" xml:space="preserve">
    <value>Save file does not exist</value>
  </data>
  <data name="GameSettings" xml:space="preserve">
    <value>GameSettings</value>
  </data>
  <data name="GameDirectory" xml:space="preserve">
    <value>Game directory</value>
  </data>
  <data name="SetGameDirectory" xml:space="preserve">
    <value>Set directory</value>
  </data>
  <data name="SetMemory" xml:space="preserve">
    <value>Set memory</value>
  </data>
  <data name="Used" xml:space="preserve">
    <value>Used</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="GameKey" xml:space="preserve">
    <value>Game key</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="GameVersion" xml:space="preserve">
    <value>Game version</value>
  </data>
  <data name="LogClear" xml:space="preserve">
    <value>Log clear</value>
  </data>
  <data name="OpenLogFile" xml:space="preserve">
    <value>Open log file</value>
  </data>
  <data name="ClearLogFiles" xml:space="preserve">
    <value>Clear log file</value>
  </data>
  <data name="MissionsLoadoutsClean" xml:space="preserve">
    <value>Missions loadouts clean</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="ClearMissionsLoadouts" xml:space="preserve">
    <value>Clear missions loadouts</value>
  </data>
  <data name="OpenMissionsLoadoutsFolder" xml:space="preserve">
    <value>Open missions loadouts folder</value>
  </data>
  <data name="SaveClean" xml:space="preserve">
    <value>Save clean</value>
  </data>
  <data name="RetainRecentSaveCount" xml:space="preserve">
    <value>Retain recent save count</value>
  </data>
  <data name="ClearSave" xml:space="preserve">
    <value>Clear save</value>
  </data>
  <data name="OpenSaveFolder" xml:space="preserve">
    <value>Open save folder</value>
  </data>
  <data name="OpenGameDirectory" xml:space="preserve">
    <value>Open directory</value>
  </data>
  <data name="VmparamsMemorySet" xml:space="preserve">
    <value>Vmparams memory set to</value>
  </data>
  <data name="VmparamsMemorySetSuccess" xml:space="preserve">
    <value>Vmparams memory set success</value>
  </data>
  <data name="CustomResolution" xml:space="preserve">
    <value>Custom resolution</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Clear all</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="BorderlessWindow" xml:space="preserve">
    <value>Borderless window</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="SetupSuccessful" xml:space="preserve">
    <value>Setup successful</value>
  </data>
  <data name="ResetSuccessful" xml:space="preserve">
    <value>Reset successful</value>
  </data>
  <data name="CustomResolutionSetupError" xml:space="preserve">
    <value>Custom resolution setup error</value>
  </data>
  <data name="CustomResolutionResetError" xml:space="preserve">
    <value>Custom resolution reset error</value>
  </data>
  <data name="CustomResolutionGetFailed" xml:space="preserve">
    <value>CustomResolution get failed</value>
  </data>
  <data name="WidthAndHeightCannotBeEmpty" xml:space="preserve">
    <value>Width and height cannot be empty</value>
  </data>
  <data name="MinMemory" xml:space="preserve">
    <value>Minimum memory cannot be lower than</value>
  </data>
  <data name="MaxMemory" xml:space="preserve">
    <value>Maximum memory cannot exceed</value>
  </data>
  <data name="FormatError" xml:space="preserve">
    <value>Format error</value>
  </data>
</root>