<Page
  x:Class="StarsectorTools.Views.ModManagerPage.ModManagerPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Utils="clr-namespace:StarsectorTools.Libs.Utils"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:local="clr-namespace:StarsectorTools.Views.ModManagerPage"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:pu="clr-namespace:Panuon.WPF.UI;assembly=Panuon.WPF.UI"
  xmlns:vm="clr-namespace:StarsectorTools.ViewModels.ModManagerPage"
  x:Name="Page_MainPage"
  Title="ModManager"
  d:DesignHeight="450"
  d:DesignWidth="800"
  FontSize="16"
  mc:Ignorable="d">
  <d:Page.DataContext>
    <vm:ModManagerPageViewModel />
  </d:Page.DataContext>
  <Page.Resources>
    <Style
      x:Key="CenterAlignmentStyle"
      BasedOn="{StaticResource TextBlockBaseStyle}"
      TargetType="TextBlock">
      <Setter Property="TextAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Background" Value="{x:Null}" />
      <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
    </Style>
    <Style
      x:Key="EnabledStyle"
      BasedOn="{StaticResource ButtonBaseStyle}"
      TargetType="Button">
      <Setter Property="Background" Value="{DynamicResource ColorAqua2}" />
      <Setter Property="Content" Value="{Binding DataContext.I18n.I18nRes.Enabled, ElementName=Page_MainPage}" />
      <Setter Property="Tag" Value="true" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
          <Setter Property="Background" Value="{DynamicResource ColorRed2}" />
          <Setter Property="Content" Value="{Binding DataContext.I18n.I18nRes.Disabled, ElementName=Page_MainPage}" />
          <Setter Property="Tag" Value="false" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style
      x:Key="CollectedStyle"
      BasedOn="{StaticResource ButtonBaseStyle}"
      TargetType="Button">
      <Setter Property="Background" Value="{DynamicResource ColorYellow2}" />
      <Setter Property="Content" Value="{Binding DataContext.I18n.I18nRes.Collected, ElementName=Page_MainPage}" />
      <Setter Property="Tag" Value="true" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsCollected}" Value="False">
          <Setter Property="Background" Value="{DynamicResource ColorLight1}" />
          <Setter Property="Content" Value="{Binding DataContext.I18n.I18nRes.UnCollected, ElementName=Page_MainPage}" />
          <Setter Property="Tag" Value="false" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style
      x:Key="GameVersionStyle"
      BasedOn="{StaticResource CenterAlignmentStyle}"
      TargetType="TextBlock">
      <Setter Property="Background" Value="{DynamicResource ColorLight1}" />
      <Setter Property="ToolTip" Value="{Binding DataContext.I18n.I18nRes.SupportedVersionSameAsGameVersion, ElementName=Page_MainPage}" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsSameToGameVersion}" Value="False">
          <Setter Property="Background" Value="{DynamicResource ColorYellow2}" />
          <Setter Property="ToolTip" Value="{Binding DataContext.I18n.I18nRes.SupportedVersionNotSameAsGameVersion, ElementName=Page_MainPage}" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style
      x:Key="UtilityStyle"
      BasedOn="{StaticResource CenterAlignmentStyle}"
      TargetType="TextBlock">
      <Setter Property="Background" Value="{DynamicResource ColorBlue2}" />
      <Setter Property="Text" Value="✅" />
      <Setter Property="ToolTip" Value="{Binding DataContext.I18n.I18nRes.IsUtilityMod, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsUtility}" Value="False">
          <Setter Property="Background" Value="{DynamicResource ColorLight1}" />
          <Setter Property="Text" Value="❎" />
          <Setter Property="ToolTip" Value="{Binding DataContext.I18n.I18nRes.NotUtilityMod, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="MissDependenciesStyle" TargetType="StackPanel">
      <Setter Property="Height" Value="30" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding MissDependencies}" Value="false">
          <Setter Property="Height" Value="0" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </Page.Resources>
  <Grid>
    <GroupBox Header="{Binding I18n.I18nRes.ModManager}" Style="{StaticResource GroupBoxBaseStyle}">
      <Grid>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid
            x:Name="Grid_GroupMenu"
            d:Tag="True"
            Tag="{Binding GroupMenuIsExpand}">
            <Grid.Style>
              <Style TargetType="Grid">
                <Setter Property="Width" Value="30" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                    <Setter Property="Width" Value="NaN" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Grid.Style>
            <ScrollViewer Margin="0,30,0,30">
              <ScrollViewer.Style>
                <Style BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="ScrollViewer">
                  <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Tag, ElementName=Grid_GroupMenu}" Value="True">
                      <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </ScrollViewer.Style>
              <StackPanel>
                <ListBox
                  x:Name="ListBox_ModsGroupMenu"
                  HorizontalContentAlignment="Stretch"
                  ItemContainerStyle="{StaticResource ListBoxItemView}"
                  ItemsSource="{Binding ListBox_MainMenu.ItemsSource}"
                  PreviewMouseRightButtonDown="ListBox_PreviewMouseRightButtonDown"
                  PreviewMouseWheel="ListBox_PreviewMouseWheel"
                  SelectedItem="{Binding ListBox_MainMenu.SelectedItem}"
                  Style="{StaticResource ListBoxBaseStyle}">
                  <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                      <i:InvokeCommandAction Command="{Binding ListBox_MainMenu.SelectionChangedCommand}" CommandParameter="{Binding ListBox_MainMenu.SelectedItem}" />
                    </i:EventTrigger>
                  </i:Interaction.Triggers>
                </ListBox>
                <Expander
                  Padding="0"
                  Header="{Binding I18n.I18nRes.GroupedByModType}"
                  Style="{StaticResource ExpanderSelectedItem}">
                  <ListBox
                    x:Name="ListBox_ModTypeGroup"
                    HorizontalContentAlignment="Stretch"
                    ItemContainerStyle="{StaticResource ListBoxItemView}"
                    ItemsSource="{Binding ListBox_TypeGroupMenu.ItemsSource}"
                    PreviewMouseRightButtonDown="ListBox_PreviewMouseRightButtonDown"
                    PreviewMouseWheel="ListBox_PreviewMouseWheel"
                    SelectedItem="{Binding ListBox_TypeGroupMenu.SelectedItem}"
                    Style="{StaticResource ListBoxBaseStyle}">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ListBox_TypeGroupMenu.SelectionChangedCommand}" CommandParameter="{Binding ListBox_TypeGroupMenu.SelectedItem}" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </ListBox>
                </Expander>
                <Expander
                  Padding="0"
                  Header="{Binding I18n.I18nRes.UserGroup}"
                  IsExpanded="True"
                  Style="{StaticResource ExpanderSelectedItem}">
                  <ListBox
                    x:Name="ListBox_UserGroup"
                    HorizontalContentAlignment="Stretch"
                    ItemContainerStyle="{StaticResource ListBoxItemView}"
                    ItemsSource="{Binding ListBox_UserGroupMenu.ItemsSource}"
                    PreviewMouseRightButtonDown="ListBox_PreviewMouseRightButtonDown"
                    PreviewMouseWheel="ListBox_PreviewMouseWheel"
                    SelectedItem="{Binding ListBox_UserGroupMenu.SelectedItem}"
                    Style="{StaticResource ListBoxBaseStyle}">
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ListBox_UserGroupMenu.SelectionChangedCommand}" CommandParameter="{Binding ListBox_UserGroupMenu.SelectedItem}" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </ListBox>
                </Expander>
              </StackPanel>
            </ScrollViewer>
            <Button
              x:Name="Button_ExpandGroupMenu"
              Height="30"
              Padding="0"
              VerticalAlignment="Top"
              HorizontalContentAlignment="Left"
              Command="{Binding GroupMenuExpandCommand}"
              Style="{StaticResource ButtonBaseStyle}">
              <pu:ButtonHelper.Icon>
                <emoji:TextBlock FontSize="16">
                  <TextBlock.Style>
                    <Style TargetType="emoji:TextBlock">
                      <Setter Property="Text" Value="{x:Static Utils:STIcon.MenuCloseIcon}" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Tag, ElementName=Grid_GroupMenu}" Value="True">
                          <Setter Property="Text" Value="{x:Static Utils:STIcon.MenuOpenIcon}" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                </emoji:TextBlock>
              </pu:ButtonHelper.Icon>
            </Button>
            <Button
              x:Name="Button_AddUserGroup"
              Height="30"
              Padding="0,0,5,0"
              VerticalAlignment="Bottom"
              HorizontalContentAlignment="Left"
              pu:ButtonHelper.Icon="➕"
              Command="{Binding AddUserGroupCommand}"
              Content="{Binding I18n.I18nRes.AddUserGroup}"
              Style="{StaticResource ButtonBaseStyle}" />
          </Grid>
          <Grid
            x:Name="Grid_DataGrid"
            Grid.Column="1"
            Margin="0,0,5,0">
            <DataGrid
              x:Name="DataGrid_ModsShowList"
              Margin="0,30,0,0"
              d:ItemsSource="{d:SampleData ItemCount=5}"
              pu:DataGridHelper.ColumnHeaderHorizontalContentAlignment="Center"
              AllowDrop="True"
              AutoGenerateColumns="False"
              CanUserAddRows="False"
              Drop="DataGrid_ModsShowList_Drop"
              GridLinesVisibility="Horizontal"
              ItemsSource="{Binding NowShowMods, IsAsync=True}"
              RowDetailsVisibilityMode="Visible"
              RowHeight="50"
              Style="{StaticResource DataGridBaseStyle}"
              VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                  <i:InvokeCommandAction Command="{Binding DataGridSelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=DataGrid_ModsShowList}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                  <i:InvokeCommandAction Command="{Binding DataGridSelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=DataGrid_ModsShowList}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="LostFocus">
                  <i:InvokeCommandAction Command="{Binding DataGridLostFocusCommand}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
              <DataGrid.InputBindings>
                <KeyBinding Command="ApplicationCommands.NotACommand" Gesture="Delete" />
              </DataGrid.InputBindings>
              <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                  <Setter Property="Tag" Value="{Binding Id}" />
                  <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                  <Setter Property="ContextMenu">
                    <Setter.Value>
                      <ContextMenu
                        ItemContainerStyle="{StaticResource MenuItemView}"
                        ItemsSource="{Binding ContextMenu.ItemsSource}"
                        Style="{StaticResource ContextMenuBaseStyle}">
                        <i:Interaction.Triggers>
                          <!--  使用Loaded时,如果有多个未载入的菜单,使用右键挨个点击只会载入第一个,故使用Opened  -->
                          <i:EventTrigger EventName="Opened">
                            <i:InvokeCommandAction Command="{Binding ContextMenu.LoadedCommand}" />
                          </i:EventTrigger>
                        </i:Interaction.Triggers>
                      </ContextMenu>
                    </Setter.Value>
                  </Setter>
                  <!--<EventSetter Event="MouseDown" Handler="DataGridItem_MouseDown" />
                  <EventSetter Event="Selected" Handler="DataGridItem_Selected" />
                  <EventSetter Event="GotFocus" Handler="DataGridItem_GotFocus" />-->
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                      <Setter Property="Background" Value="{DynamicResource ColorLight2}" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </DataGrid.RowStyle>
              <DataGrid.Columns>
                <DataGridTemplateColumn CanUserSort="True" SortMemberPath="Collected">
                  <DataGridTemplateColumn.Header>
                    <emoji:TextBlock
                      Background="{x:Null}"
                      FontSize="20"
                      Text="🌟"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowModCollectState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTemplateColumn.Header>
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <Button
                        x:Name="Button_Collected"
                        Margin="0,5,0,5"
                        Padding="5,0,5,0"
                        Command="{Binding DataContext.CollectedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                        Style="{StaticResource CollectedStyle}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn CanUserSort="True" SortMemberPath="Enabled">
                  <DataGridTemplateColumn.Header>
                    <Label
                      Background="{x:Null}"
                      Content="{Binding DataContext.I18n.I18nRes.EnabledState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowModEnableState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTemplateColumn.Header>
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <Button
                        x:Name="Button_Enabled"
                        Margin="0,5,0,5"
                        Padding="5,0,5,0"
                        Command="{Binding DataContext.EnabledCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                        Style="{StaticResource EnabledStyle}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn IsReadOnly="True">
                  <DataGridTemplateColumn.Header>
                    <Label
                      Background="{x:Null}"
                      Content="{Binding DataContext.I18n.I18nRes.Icon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowModIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTemplateColumn.Header>
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <Image Source="{Binding ImageSource}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                  Binding="{Binding Name}"
                  ElementStyle="{StaticResource CenterAlignmentStyle}"
                  IsReadOnly="True"
                  SortMemberPath="Name">
                  <DataGridTextColumn.Header>
                    <Label
                      Background="{x:Null}"
                      Content="{Binding DataContext.I18n.I18nRes.Name, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowModName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn
                  Width="100"
                  Binding="{Binding Author}"
                  ElementStyle="{StaticResource CenterAlignmentStyle}"
                  IsReadOnly="True"
                  SortMemberPath="Author">
                  <DataGridTextColumn.Header>
                    <Label
                      Background="{x:Null}"
                      Content="{Binding DataContext.I18n.I18nRes.Author, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowModAuthor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn
                  Binding="{Binding Version}"
                  ElementStyle="{StaticResource CenterAlignmentStyle}"
                  IsReadOnly="True"
                  SortMemberPath="Version">
                  <DataGridTextColumn.Header>
                    <Label
                      Background="{x:Null}"
                      Content="{Binding DataContext.I18n.I18nRes.Version, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowModVersion, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn
                  Binding="{Binding GameVersion}"
                  ElementStyle="{StaticResource GameVersionStyle}"
                  IsReadOnly="True"
                  SortMemberPath="GameVersion">
                  <DataGridTextColumn.Header>
                    <Label
                      Background="{x:Null}"
                      Content="{Binding DataContext.I18n.I18nRes.GameVersion, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowGameVersion, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn
                  ElementStyle="{StaticResource UtilityStyle}"
                  IsReadOnly="True"
                  SortMemberPath="Utility">
                  <DataGridTextColumn.Header>
                    <Label
                      Background="{x:Null}"
                      Content="{Binding DataContext.I18n.I18nRes.Utility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowUtility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn
                  Binding="{Binding UserDescription}"
                  IsReadOnly="True"
                  SortMemberPath="UserDescription">
                  <DataGridTextColumn.ElementStyle>
                    <Style BasedOn="{StaticResource CenterAlignmentStyle}" TargetType="TextBlock">
                      <Setter Property="ToolTip" Value="{x:Null}" />
                    </Style>
                  </DataGridTextColumn.ElementStyle>
                  <DataGridTextColumn.Header>
                    <Label
                      Background="{x:Null}"
                      Content="{Binding DataContext.I18n.I18nRes.UserDescription, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding DataContext.I18n.I18nRes.ShowUserDescription, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" />
                  </DataGridTextColumn.Header>
                </DataGridTextColumn>
              </DataGrid.Columns>
              <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal" Style="{StaticResource MissDependenciesStyle}">
                    <Button
                      x:Name="Button_EnableDependencies"
                      Margin="10,0,0,0"
                      Padding="5,0,5,0"
                      Command="{Binding DataContext.EnableDependenciesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Content="{Binding DataContext.I18n.I18nRes.EnableDependencies, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                      Style="{StaticResource ButtonBaseStyle}"
                      ToolTip="{Binding Content, RelativeSource={RelativeSource Mode=Self}}" />
                    <Label
                      HorizontalContentAlignment="Left"
                      Background="{x:Null}"
                      Content="{Binding MissDependenciesMessage}"
                      Style="{StaticResource LabelBaseStyle}"
                      ToolTip="{Binding Content, RelativeSource={RelativeSource Mode=Self}}" />
                  </StackPanel>
                </DataTemplate>
              </DataGrid.RowDetailsTemplate>
            </DataGrid>
            <TextBox
              x:Name="TextBox_SearchMods"
              Height="30"
              Margin="0,0,120,0"
              VerticalAlignment="Top"
              Style="{StaticResource TextBoxBaseStyle}"
              Text="{Binding ModFilterText, UpdateSourceTrigger=PropertyChanged}"
              TextWrapping="Wrap"
              ToolTip="{Binding I18n.I18nRes.SearchMod}" />
            <!--  TextBox输入占位符  -->
            <Label
              Width="{Binding Width, ElementName=TextBox_SearchMods}"
              Height="{Binding Height, ElementName=TextBox_SearchMods}"
              Margin="{Binding Margin, ElementName=TextBox_SearchMods}"
              HorizontalAlignment="{Binding HorizontalAlignment, ElementName=TextBox_SearchMods}"
              VerticalAlignment="{Binding VerticalAlignment, ElementName=TextBox_SearchMods}"
              Background="{x:Null}"
              Content="{Binding I18n.I18nRes.SearchMod}"
              FontSize="16"
              IsEnabled="False"
              IsHitTestVisible="False">
              <Label.Style>
                <Style BasedOn="{StaticResource LabelBaseStyle}" TargetType="Label">
                  <Setter Property="Visibility" Value="Hidden" />
                  <Style.Triggers>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Text, ElementName=TextBox_SearchMods}" Value="" />
                        <Condition Binding="{Binding IsFocused, ElementName=TextBox_SearchMods}" Value="False" />
                      </MultiDataTrigger.Conditions>
                      <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Visible" />
                      </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                  </Style.Triggers>
                </Style>
              </Label.Style>
            </Label>
            <ComboBox
              x:Name="ComboBox_SearchType"
              Width="120"
              Height="30"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              DisplayMemberPath="Content"
              ItemsSource="{Binding ComboBox_ModFilterType.ItemsSource}"
              SelectedItem="{Binding ComboBox_ModFilterType.SelectedItem}"
              Style="{StaticResource ComboBoxBaseStyle}">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                  <i:InvokeCommandAction Command="{Binding ComboBox_ModFilterType.SelectionChangedCommand}" CommandParameter="{Binding ComboBox_ModFilterType.SelectedItem}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </ComboBox>
          </Grid>
          <Grid
            x:Name="Grid_RightSide"
            Grid.Column="2"
            MinWidth="120">
            <ScrollViewer Margin="0,0,0,80" VerticalScrollBarVisibility="Auto">
              <StackPanel>
                <Expander
                  Margin="0,0,0,5"
                  Header="{Binding I18n.I18nRes.OpenDirectory}"
                  Style="{StaticResource ExpanderBaseStyle}">
                  <StackPanel>
                    <Button
                      x:Name="Button_OpenModDirectory"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding OpenModDirectoryCommand}"
                      Content="{Binding I18n.I18nRes.OpenModsDirectory}"
                      Style="{StaticResource ButtonBaseStyle}" />
                    <Button
                      x:Name="Button_OpenBackupDirectory"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding OpenBackupDirectoryCommand}"
                      Content="{Binding I18n.I18nRes.OpenBackupDirectory}"
                      Style="{StaticResource ButtonBaseStyle}" />
                    <Button
                      x:Name="Button_OpenSaveDirectory"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding OpenSaveDirectoryCommand}"
                      Content="{Binding I18n.I18nRes.OpenSaveDirectory}"
                      Style="{StaticResource ButtonBaseStyle}" />
                  </StackPanel>
                </Expander>
                <Expander
                  Margin="0,0,0,5"
                  Header="{Binding I18n.I18nRes.ManipulateUserData}"
                  Style="{StaticResource ExpanderBaseStyle}"
                  ToolTip="{Binding I18n.I18nRes.ManipulateUserDataToolTip}">
                  <StackPanel>
                    <Button
                      x:Name="Button_ImportUserData"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding ImportUserDataCommand}"
                      Content="{Binding I18n.I18nRes.ImportUserData}"
                      Style="{StaticResource ButtonBaseStyle}" />
                    <Button
                      x:Name="Button_ExportUserData"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding ExportUserDataCommand}"
                      Content="{Binding I18n.I18nRes.ExportUserData}"
                      Style="{StaticResource ButtonBaseStyle}" />
                  </StackPanel>
                </Expander>
                <Expander
                  Margin="0,0,0,5"
                  Header="{Binding I18n.I18nRes.ManipulateUserGroup}"
                  Style="{StaticResource ExpanderBaseStyle}">
                  <StackPanel>
                    <Button
                      x:Name="Button_ImportUserGroup"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding ImportUserGroupCommand}"
                      Content="{Binding I18n.I18nRes.ImportUserGroup}"
                      Style="{StaticResource ButtonBaseStyle}" />
                    <ComboBox
                      x:Name="ComboBox_ExportUserGroup"
                      Height="30"
                      Margin="0,0,0,5"
                      VerticalAlignment="Top"
                      DisplayMemberPath="Content"
                      ItemsSource="{Binding ComboBox_ExportUserGroup.ItemsSource}"
                      SelectedIndex="0"
                      SelectedItem="{Binding ComboBox_ExportUserGroup.SelectedItem}"
                      Style="{StaticResource ComboBoxBaseStyle}" />
                    <Button
                      x:Name="Button_ExportUserGroup"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding ExportUserGroupCommand}"
                      Content="{Binding I18n.I18nRes.ExportUserGroup}"
                      Style="{StaticResource ButtonBaseStyle}" />
                  </StackPanel>
                </Expander>
                <Expander
                  Margin="0,0,0,5"
                  Header="{Binding I18n.I18nRes.ManipulateEnabledList}"
                  Style="{StaticResource ExpanderBaseStyle}">
                  <StackPanel>
                    <Button
                      x:Name="Button_ImportEnabledListFromSave"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding ImportEnabledListFromSaveCommand}"
                      Content="{Binding I18n.I18nRes.ImportFromSave}"
                      Style="{StaticResource ButtonBaseStyle}" />
                    <Button
                      x:Name="Button_ImportEnabledList"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding ImportEnabledListCommand}"
                      Content="{Binding I18n.I18nRes.ImportEnabledList}"
                      Style="{StaticResource ButtonBaseStyle}" />
                    <Button
                      x:Name="Button_ExportEnabledList"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding ExportEnabledListCommand}"
                      Content="{Binding I18n.I18nRes.ExportEnabledList}"
                      Style="{StaticResource ButtonBaseStyle}" />
                  </StackPanel>
                </Expander>
                <Expander
                  x:Name="Expander_RandomEnable"
                  Margin="0,0,0,5"
                  Header="{Binding I18n.I18nRes.RandomEnableMods}">
                  <Expander.Style>
                    <Style BasedOn="{StaticResource ExpanderBaseStyle}" TargetType="Expander">
                      <Setter Property="Visibility" Value="Collapsed" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding NowSelectedIsUserGroup}" Value="True">
                          <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Expander.Style>
                  <StackPanel>
                    <Grid Margin="0,0,0,5">
                      <TextBox
                        x:Name="TextBox_MinRandomSize"
                        Height="30"
                        InputMethod.IsInputMethodEnabled="False"
                        PreviewTextInput="TextBox_NumberInput"
                        Style="{StaticResource TextBoxBaseStyle}"
                        Text="{Binding MinRandomSize, UpdateSourceTrigger=PropertyChanged}"
                        ToolTip="{Binding I18n.I18nRes.MinRandomNumber}" />
                      <!--  TextBox输入占位符  -->
                      <Label
                        Width="{Binding Width, ElementName=TextBox_MinRandomSize}"
                        Height="{Binding Height, ElementName=TextBox_MinRandomSize}"
                        Margin="{Binding Margin, ElementName=TextBox_MinRandomSize}"
                        HorizontalAlignment="{Binding HorizontalAlignment, ElementName=TextBox_MinRandomSize}"
                        VerticalAlignment="{Binding VerticalAlignment, ElementName=TextBox_MinRandomSize}"
                        Background="{x:Null}"
                        Content="{Binding I18n.I18nRes.MinRandomNumber}"
                        IsEnabled="False"
                        IsHitTestVisible="False">
                        <Label.Style>
                          <Style BasedOn="{StaticResource LabelBaseStyle}" TargetType="Label">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Text, ElementName=TextBox_MinRandomSize}" Value="" />
                                  <Condition Binding="{Binding IsFocused, ElementName=TextBox_MinRandomSize}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                  <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                              </MultiDataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Label.Style>
                      </Label>
                    </Grid>
                    <Grid Margin="0,0,0,5">
                      <TextBox
                        x:Name="TextBox_MaxRandomSize"
                        Height="30"
                        InputMethod.IsInputMethodEnabled="False"
                        PreviewTextInput="TextBox_NumberInput"
                        Style="{StaticResource TextBoxBaseStyle}"
                        Text="{Binding MaxRandomSize, UpdateSourceTrigger=PropertyChanged}"
                        ToolTip="{Binding I18n.I18nRes.MaxRandomNumber}" />
                      <!--  TextBox输入占位符  -->
                      <Label
                        Width="{Binding Width, ElementName=TextBox_MaxRandomSize}"
                        Height="{Binding Height, ElementName=TextBox_MaxRandomSize}"
                        Margin="{Binding Margin, ElementName=TextBox_MaxRandomSize}"
                        HorizontalAlignment="{Binding HorizontalAlignment, ElementName=TextBox_MaxRandomSize}"
                        VerticalAlignment="{Binding VerticalAlignment, ElementName=TextBox_MaxRandomSize}"
                        Background="{x:Null}"
                        Content="{Binding I18n.I18nRes.MaxRandomNumber}"
                        IsEnabled="False"
                        IsHitTestVisible="False">
                        <Label.Style>
                          <Style BasedOn="{StaticResource LabelBaseStyle}" TargetType="Label">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Text, ElementName=TextBox_MaxRandomSize}" Value="" />
                                  <Condition Binding="{Binding IsFocused, ElementName=TextBox_MaxRandomSize}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                  <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                              </MultiDataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Label.Style>
                      </Label>
                    </Grid>
                    <Button
                      x:Name="Button_RandomMods"
                      Height="30"
                      Margin="0,0,0,5"
                      Command="{Binding RandomEnableModsCommand}"
                      Content="{Binding I18n.I18nRes.RandomEnableMods}"
                      Style="{StaticResource ButtonBaseStyle}" />
                  </StackPanel>
                </Expander>
              </StackPanel>
            </ScrollViewer>
            <Button
              x:Name="Button_Save"
              Height="30"
              Margin="5,0,5,5"
              VerticalAlignment="Bottom"
              Command="{Binding SaveCommand}"
              Content="{Binding I18n.I18nRes.SaveConfig}"
              Style="{StaticResource RemindStyle}"
              Tag="False">
              <pu:ButtonHelper.Icon>
                <emoji:TextBlock Text="💾" />
              </pu:ButtonHelper.Icon>
            </Button>
          </Grid>
        </Grid>
        <Grid
          x:Name="Grid_ModDetails"
          Width="360"
          HorizontalAlignment="Right"
          d:Tag="false"
          Tag="{Binding IsShowModDetails}">
          <Grid.Style>
            <Style TargetType="Grid">
              <Setter Property="Visibility" Value="Hidden" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                  <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Grid.Style>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="11*" />
            <ColumnDefinition Width="25*" MinWidth="200" />
          </Grid.ColumnDefinitions>
          <GridSplitter
            Width="5"
            Margin="0,0,0,0"
            Background="{DynamicResource ColorFG}"
            Foreground="{x:Null}" />
          <Button
            x:Name="Button_CLoseModDetails"
            Grid.Column="1"
            Width="10"
            Height="NaN"
            Padding="0"
            HorizontalAlignment="Left"
            Background="{DynamicResource ColorBB}"
            Command="{Binding CloseModDetailsButtonCommand}"
            Content="》"
            Style="{StaticResource ButtonBaseStyle}" />
          <GroupBox
            x:Name="GroupBox_ModDetails"
            Grid.Column="1"
            Margin="9,0,0,0"
            Background="{DynamicResource ColorBG}"
            Header="{Binding I18n.I18nRes.ModInfo}"
            Style="{StaticResource GroupBoxBaseStyle}">
            <i:Interaction.Triggers>
              <i:PropertyChangedTrigger Binding="{Binding IsMouseOver, ElementName=GroupBox_ModDetails, UpdateSourceTrigger=PropertyChanged}">
                <i:InvokeCommandAction Command="{Binding ModDetailsMouseOverCommand}" CommandParameter="{Binding IsMouseOver, ElementName=GroupBox_ModDetails}" />
              </i:PropertyChangedTrigger>
            </i:Interaction.Triggers>
            <ScrollViewer>
              <StackPanel>
                <Grid Margin="0,0,0,5">
                  <Image
                    x:Name="Image_ModImage"
                    MaxHeight="100"
                    Source="{Binding ModDetailImage}" />
                </Grid>
                <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                  <Label
                    Height="30"
                    Margin="0,0,5,0"
                    HorizontalContentAlignment="Left"
                    Content="ID:"
                    Style="{StaticResource LabelBaseStyle}" />
                  <TextBox
                    x:Name="Label_ModId"
                    Height="30"
                    HorizontalContentAlignment="Left"
                    IsReadOnly="True"
                    Style="{StaticResource TextBoxBaseStyle}"
                    Text="{Binding ModDetailId}"
                    ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                </StackPanel>
                <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                  <!--  TODO 需要解决冒号问题  -->
                  <Label
                    Margin="0,0,5,0"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Content="{Binding I18n.I18nRes.Name}"
                    Style="{StaticResource LabelBaseStyle}" />
                  <TextBox
                    x:Name="Label_ModName"
                    Height="30"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    IsReadOnly="True"
                    Style="{StaticResource TextBoxBaseStyle}"
                    Text="{Binding ModDetailName}"
                    ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                </StackPanel>
                <StackPanel Margin="0,0,0,5" Orientation="Horizontal">
                  <Label
                    Height="30"
                    Margin="0,0,5,0"
                    HorizontalContentAlignment="Left"
                    Content="{Binding I18n.I18nRes.Version}"
                    Style="{StaticResource LabelBaseStyle}" />
                  <TextBox
                    x:Name="Label_ModVersion"
                    Height="30"
                    HorizontalContentAlignment="Left"
                    IsReadOnly="True"
                    Style="{StaticResource TextBoxBaseStyle}"
                    Text="{Binding ModDetailId}"
                    ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                </StackPanel>
                <StackPanel
                  Margin="0,0,0,5"
                  Cursor=""
                  Orientation="Horizontal">
                  <Label
                    Height="30"
                    Margin="0,0,5,0"
                    HorizontalContentAlignment="Left"
                    Content="{Binding I18n.I18nRes.GameVersion}"
                    Style="{StaticResource LabelBaseStyle}" />
                  <TextBox
                    x:Name="Label_GameVersion"
                    Height="30"
                    HorizontalContentAlignment="Left"
                    IsReadOnly="True"
                    Style="{StaticResource TextBoxBaseStyle}"
                    Text="{Binding ModDetailGameVersion}"
                    ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                </StackPanel>
                <Button
                  x:Name="Button_ModPath"
                  Height="30"
                  Margin="0,0,0,5"
                  Padding="5,0,0,0"
                  HorizontalContentAlignment="Left"
                  Command="{Binding OpenModPathCommand}"
                  CommandParameter="{Binding ModDetailPath}"
                  Content="{Binding ModDetailPath}"
                  Cursor="Hand"
                  Style="{StaticResource ButtonBaseStyle}"
                  ToolTip="{Binding Content, RelativeSource={RelativeSource Mode=Self}}" />
                <GroupBox
                  Margin="0,0,0,5"
                  Header="{Binding I18n.I18nRes.Author}"
                  Style="{StaticResource GroupBoxBaseStyle}">
                  <TextBox
                    x:Name="TextBlock_ModAuthor"
                    Height="NaN"
                    VerticalAlignment="Top"
                    IsReadOnly="True"
                    Style="{StaticResource TextBoxBaseStyle}"
                    Text="{Binding ModDetailAuthor}"
                    TextWrapping="Wrap"
                    ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                </GroupBox>
                <GroupBox
                  x:Name="GroupBox_ModDependencies"
                  Margin="0,0,0,5"
                  d:Tag=""
                  Header="{Binding I18n.I18nRes.Dependencies}"
                  Tag="{Binding Text, ElementName=TextBlock_ModDependencies}">
                  <GroupBox.Style>
                    <Style BasedOn="{StaticResource GroupBoxBaseStyle}" TargetType="GroupBox">
                      <Setter Property="Visibility" Value="Visible" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="">
                          <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </GroupBox.Style>
                  <TextBox
                    x:Name="TextBlock_ModDependencies"
                    Height="NaN"
                    IsReadOnly="True"
                    Style="{StaticResource TextBoxBaseStyle}"
                    Text="{Binding ModDetailDependencies}"
                    TextWrapping="Wrap"
                    ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                </GroupBox>
                <GroupBox
                  Margin="0,0,0,5"
                  Header="{Binding I18n.I18nRes.Description}"
                  Style="{StaticResource GroupBoxBaseStyle}">
                  <TextBox
                    x:Name="TextBlock_ModDescription"
                    Height="NaN"
                    IsReadOnly="True"
                    Style="{StaticResource TextBoxBaseStyle}"
                    Text="{Binding ModDetailDescription}"
                    TextWrapping="Wrap"
                    ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                </GroupBox>
                <GroupBox Header="{Binding I18n.I18nRes.UserDescription}" Style="{StaticResource GroupBoxBaseStyle}">
                  <TextBox
                    x:Name="TextBox_UserDescription"
                    Height="NaN"
                    Style="{StaticResource TextBoxBaseStyle}"
                    Text="{Binding ModDetailUserDescription, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap"
                    ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}" />
                </GroupBox>
              </StackPanel>
            </ScrollViewer>
          </GroupBox>
        </Grid>
      </Grid>
    </GroupBox>
  </Grid>
</Page>