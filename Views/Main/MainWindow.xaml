<pu:WindowX
  x:Class="StarsectorToolbox.Views.Main.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ST="clr-namespace:StarsectorToolbox.Models.ST"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:pu="https://opensource.panuon.com/wpf-ui"
  xmlns:sys="clr-namespace:System.Windows;assembly=PresentationFramework"
  xmlns:vm="clr-namespace:StarsectorToolbox.ViewModels.Main"
  x:Name="Window_MainWindow"
  Title="StarsectorToolbox"
  Width="1000"
  Height="500"
  MinWidth="800"
  MinHeight="400"
  Padding="5"
  x:ClassModifier="internal"
  FontFamily="Consolas"
  MouseLeftButtonDown="Window_MouseLeftButtonDown"
  Style="{StaticResource WindowXBaseStyle}"
  mc:Ignorable="d">
  <!--  使用SystemParameters中的MaximizedPrimaryScreenWidth和MaximizedPrimaryScreenHeight来指定最大化范围,不然会覆盖任务栏  -->
  <d:Window.DataContext>
    <vm:MainWindowViewModel />
  </d:Window.DataContext>
  <Window.Resources>
    <Style
      x:Key="ButtonPressed"
      BasedOn="{StaticResource {x:Type Button}}"
      TargetType="Button">
      <Style.Triggers>
        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
          <Setter Property="Background" Value="{DynamicResource ColorAqua3}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding Tag, ElementName=Grid_MainMenu}" Value="False">
          <Setter Property="pu:IconHelper.Margin" Value="0" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </Window.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>
    <Grid
      x:Name="Grid_MainMenu"
      Width="NaN"
      MinWidth="30">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <i:Interaction.Triggers>
        <i:DataTrigger Binding="{Binding IsChecked, ElementName=Button_MainMenuToggleExpand}" Value="False">
          <i:ChangePropertyAction PropertyName="Width" Value="{Binding ActualWidth, ElementName=Button_MainMenuToggleExpand}" />
        </i:DataTrigger>
        <i:DataTrigger Binding="{Binding IsChecked, ElementName=Button_MainMenuToggleExpand}" Value="True">
          <i:ChangePropertyAction PropertyName="Width" Value="NaN" />
        </i:DataTrigger>
      </i:Interaction.Triggers>
      <ToggleButton
        x:Name="Button_MainMenuToggleExpand"
        Grid.Row="0"
        MinWidth="30"
        MinHeight="30"
        Padding="5,0,5,0"
        HorizontalAlignment="Left"
        d:IsChecked="True"
        pu:IconHelper.Margin="0"
        Background="{x:Null}"
        Command="{Binding MenuExpandCommand}">
        <emoji:TextBlock Text="{x:Static ST:STIcon.MenuOpenIcon}">
          <i:Interaction.Triggers>
            <i:DataTrigger Binding="{Binding IsChecked, ElementName=Button_MainMenuToggleExpand}" Value="True">
              <i:ChangePropertyAction PropertyName="Text" Value="{x:Static ST:STIcon.MenuOpenIcon}" />
            </i:DataTrigger>
            <i:DataTrigger Binding="{Binding IsChecked, ElementName=Button_MainMenuToggleExpand}" Value="False">
              <i:ChangePropertyAction PropertyName="Text" Value="{x:Static ST:STIcon.MenuCloseIcon}" />
            </i:DataTrigger>
          </i:Interaction.Triggers>
        </emoji:TextBlock>
      </ToggleButton>
      <ScrollViewer Grid.Row="1">
        <ScrollViewer.Style>
          <Style BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="ScrollViewer">
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
            <Style.Triggers>
              <DataTrigger Binding="{Binding Tag, ElementName=Grid_MainMenu}" Value="True">
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ScrollViewer.Style>
        <StackPanel>
          <ListBox
            ItemContainerStyle="{StaticResource ListBoxItemViewStyle}"
            ItemsSource="{Binding ListBox_MainMenu.ItemsSource}"
            ScrollViewer.VerticalScrollBarVisibility="Hidden"
            SelectedItem="{Binding ListBox_MainMenu.SelectedItem}">
            <i:Interaction.Triggers>
              <i:EventTrigger EventName="SelectionChanged">
                <i:InvokeCommandAction Command="{Binding ListBox_MainMenu.SelectionChangedCommand}" CommandParameter="{Binding ListBox_MainMenu.SelectedItem}" />
              </i:EventTrigger>
            </i:Interaction.Triggers>
          </ListBox>
          <Expander
            Background="{x:Null}"
            BorderThickness="0"
            Header="{Binding I18n.I18nRes.Extension}"
            IsExpanded="False"
            Style="{StaticResource ExpanderSelectedItemStyle}">
            <Expander.ContextMenu>
              <ContextMenu>
                <MenuItem Command="{Binding RefreshExtensionMenuCommand}" Header="{Binding I18n.I18nRes.RefreshExtensionList}">
                  <MenuItem.Icon>
                    <emoji:TextBlock Text="🔄" />
                  </MenuItem.Icon>
                </MenuItem>
              </ContextMenu>
            </Expander.ContextMenu>
            <ListBox
              ItemContainerStyle="{StaticResource ListBoxItemViewStyle}"
              ItemsSource="{Binding ListBox_ExtensionMenu.ItemsSource}"
              SelectedItem="{Binding ListBox_ExtensionMenu.SelectedItem}">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                  <i:InvokeCommandAction Command="{Binding ListBox_ExtensionMenu.SelectionChangedCommand}" CommandParameter="{Binding ListBox_ExtensionMenu.SelectedItem}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </ListBox>
          </Expander>
        </StackPanel>
      </ScrollViewer>
      <StackPanel Grid.Row="2" VerticalAlignment="Center">
        <Button
          VerticalAlignment="Bottom"
          HorizontalContentAlignment="Left"
          Command="{Binding StartGameCommand}"
          Content="{Binding I18n.I18nRes.StartGame}"
          Tag="{Binding Tag, ElementName=Grid_MainMenu}">
          <pu:ButtonHelper.Icon>
            <emoji:TextBlock Text="▶" />
          </pu:ButtonHelper.Icon>
          <Button.ContextMenu>
            <ContextMenu>
              <CheckBox Content="{Binding I18n.I18nRes.ClearGameLogOnStart}" IsChecked="{Binding ClearGameLogOnStart, UpdateSourceTrigger=PropertyChanged}" />
            </ContextMenu>
          </Button.ContextMenu>
          <Button.Style>
            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
              <Style.Triggers>
                <DataTrigger Binding="{Binding Tag, ElementName=Grid_MainMenu}" Value="False">
                  <Setter Property="pu:IconHelper.Margin" Value="0" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Button.Style>
        </Button>
        <Button
          x:Name="Button_InfoPage"
          VerticalAlignment="Bottom"
          HorizontalContentAlignment="Left"
          Command="{Binding ShowPageCommand}"
          CommandParameter="{Binding InfoPage}"
          Content="{Binding I18n.I18nRes.Info}"
          Style="{StaticResource ButtonPressed}"
          Tag="{Binding InfoButtonIsChecked}">
          <pu:ButtonHelper.Icon>
            <emoji:TextBlock Text="ℹ" />
          </pu:ButtonHelper.Icon>
        </Button>
        <Button
          x:Name="Button_SettingsPage"
          HorizontalContentAlignment="Left"
          Command="{Binding ShowPageCommand}"
          CommandParameter="{Binding SettingsPage}"
          Content="{Binding I18n.I18nRes.Settings}"
          Style="{StaticResource ButtonPressed}"
          Tag="{Binding SettingsButtonIsChecked}">
          <pu:ButtonHelper.Icon>
            <emoji:TextBlock Text="⚙" />
          </pu:ButtonHelper.Icon>
        </Button>
      </StackPanel>
    </Grid>
    <Frame
      x:Name="Frame_MainFrame"
      Grid.Column="1"
      Content="{Binding NowPage}"
      ContentRendered="Frame_MainFrame_ContentRendered"
      NavigationUIVisibility="Hidden" />
  </Grid>
</pu:WindowX>